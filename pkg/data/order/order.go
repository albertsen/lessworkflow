// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/order/order.proto

package order

type Order struct {
	Status          string                 `json:"status"`
	TotalPrice      *MonetaryAmount        `json:"totalPrice"`
	TotalTax        *MonetaryAmount        `json:"totalTax,omitempty"`
	Taxes           []*Tax                 `json:"taxes,omitempty"`
	DeliveryAddress *Address               `json:"deliveryAddress,omitempty"`
	BillingAddress  *Address               `json:"billingAddress,omitempty"`
	PaymentDetails  []*PaymentDetails      `json:"paymentDetails,omitempty"`
	LineItems       []*LineItem            `josn:"lineItems,omitempty"`
	Properties      map[string]interface{} `json:"properties,omitempty"`
}

type Address struct {
	Name         string                 `json:"name"`
	AddressLine1 string                 `json:"addressLine1"`
	AddressLine2 string                 `json:"addressLine2,omitempty"`
	PostCode     string                 `json:"postCode"`
	City         string                 `json:"city"`
	CountryCode  string                 `json:"countryCode"`
	Properties   map[string]interface{} `json:"properties,omitempty"`
}

type PaymentDetails struct {
	SubscriptionId  string                 `json:"subscriptionId"`
	TransactionCode string                 `json:"transactionCode"`
	Amount          *MonetaryAmount        `json:"amount"`
	Properties      map[string]interface{} `json:"properties,omitempty"`
}

type LineItem struct {
	ProductId          string                 `json:"productId"`
	ProductDescription string                 `json:"productDescription,omitempty"`
	Count              int32                  `json:"count"`
	ItemPrice          *MonetaryAmount        `json:"itemPrice"`
	TotalPrice         *MonetaryAmount        `json:"totalPrice"`
	ItemTaxes          []*Tax                 `json:"itemTaxes,omitempty"`
	TotalTaxes         []*Tax                 `json:"totalTaxes,omitempty"`
	Properties         map[string]interface{} `json:"properties,omitempty"`
}

type Tax struct {
	Code   string          `json:"code"`
	Amount *MonetaryAmount `json:"amount"`
}

type MonetaryAmount struct {
	Value    int64  `json:"value"`
	Currency string `json:"currency"`
}
